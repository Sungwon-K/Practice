Primary Key
-테이블에서 식별자 역할을 하는 칼럼
=>중복 방지해줌
ex) 회원 테이블의 id
    상품테이블의 상품번호
     학생테이블의 학번

RDB에서는 모든 테이블에 PK를 만드는 것을 권장

----------------------------------------------------

무결성체크- 결함이 없음

1.primary key : 데이터가 중복되지 않도록 제약(Constraint)

2.not null : data 반드시 입력

3.foreign key : 참조무결성을 유지


*CREATE
기본형
create table table명(
	칼럼명 데이터타입(크기) [Primary key,null,not null]
);

ex)
create table userTable(
    id varchar2(20) primary key,
    pw varchar2(20) not null,
    name varchar2(50) not null,
    email varchar2(50) not null,
    address varchar2(100),
    phone varchar(20)
);



*외래키
기본형
CONSTRAINT 외래키명 FOREIGN KEY(칼럼명)

ex)
create table orderTable(
    id varchar2(20) not null,
   
    constraint fk_orderTable foreign key(id)
    references userTable(id) on delete cascade
);



*체크 
CONSTRAINT 체크명 CHECK(체크조건)

ex)
create table ex2_9(
    num1 number constraint check1 check(num1 between 1 and 9),
    
    gender varchar2(10) constraint check2 check(gender in('MALE','FEMAL'))
);


*DROP TABLE 테이블명
ex)
Drop table userTable;

*Delete문
where 응용
ex)
delete from studentTable;
where id = 'wg';


*ALTER TABLE 테이블명 

Rename Column
ex)
alter table ex2_9 rename column num1 to num;
-ex2_9 테이블의 num1 칼럼을 num으로 바꿔라

Modify
alter table ex2_9 modify num varchar2[20];
-num칼럼의 자료형을 varchar[20]으로 변경

Add
alter table ex2_9 add col3 number;
-ex2_9테이블에 number자료형인 col3 칼럼 추가

Drop Column
alter table ex2_9 drop column col3;
-col3 칼럼 삭제


*테이블 복사
ex)
create table employeesCopy
as
select * from employees;

--data 없이 구조만 복사
create table employeesCopy3
as
select * from employees where 1!=1;


*시퀀스 - 1씩 증가하는 숫자 출력
create SEQUENCE seq_boardTable;

insert into boardTable values(seq_boardTable.nextval,'sql이란?');
-시퀀스 nextvalue(다음 수 출력)
1씩 증가하는 넘버링 테이블 짜기 좋다


*SELECT문
SELECT column명(*) FROM 테이블명 혹은 뷰명 WHERE 조건 ORDER BY 컬럼
ex)
SELECT * FROM USERTABLE;

SELECT * FROM studentTable where num>50

select emp_name || ', E-mail :' || email as name -- alias
from employees;
-emp_name과 email 칼럼을 불러서 출력(중간에 E- mail 문자열 삽입한다), name이라는 별칭사용


*INSERT문
INSERT INTO 테이블명(컬럼1, 컬럼2....) VALUES (값1, 값2....);
INSERT INTO 테이블명 VALUES (값1, 값2....);
INSERT INTO 테이블명(컬럼1, 컬럼2....) SELECT문;

ex)
INSERT INTO orderTable values('202004030001','www','20200403',sysdate);

insert into employeescopy2
select * from employees where salary>=7000 and salary<=10000;


*UPDATE문
ex)
update userTable set
name = '왕건' , address = '서울'
where id = 'wg';



*Decode - 3항연산자 유사 => i == @ ? x : y 
ex)
select prod_id, channel_id,decode(channel_id, 3, 'Direct') as decodes
from sales
where rownum<10;

channel_id == 3 ? 'Direct' : 'Undirect'와 같다

여기서 확장 가능

ex)
select prod_id, channel_id,decode(channel_id, 3, 'Direct',
				      9, 'Direct',
				      5, 'InDirect',
				      4, 'InDirect',
				      'others',
) as decodes
from sales
where rownum<10;
//3이면 다이렉트, 아닌 것중 9라면 다이렉트, 그 것도 아닌것중 5면 인다이렉트....








오라클
-수동 commit이 기본

MS-SQLServer, MySQL
-자동 commit이 기본

응용프로그램
:java,c#,jsp,asp
-자동 commit이 기본


asc   오름차순
desc 내림차순

