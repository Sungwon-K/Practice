1. 객체지향 프로그래밍(OOP)의 특징
5가지를 설명하시오.

*추상화.
불필요한 부분을 생략,필요 부위를 강조.
-공통 특징을 가진 모든 Object를 대표하는 Class 도출

*캡슐화
Data(Attribute)와 Function을 묶은 것을 의미.
-캡슐화된 Object는 세부내용이 은폐되어 외부접근이 제한적.
-재사용이 용이.
-Object간 message를 주고 받을때 Object세부 내용을 알 필요가 없으므로
interface는 단순해지고 Object 결합도가 낮아진다.

*정보의 은닉
절차, Data의 세부사항을 감추고 일단 기능적으로 사용하는 것.
-독립적으로 수행되고 종속되지 않으니(외부의 영향을 받지 않음) 변경,유지보수 용이.
-반드시 필요한 정보는 interface를 통해 주고받는다.

*상속
상위 Class에서 하위Class로 Attribute와 Function을 '상속'
-Attribute와 Function을 재정의 하지않고 바로 사용
-상속받은 것 외에 새 Attribute와 Function 첨가 가능
-재사용율을 올릴 수 있다.
-다중 상속 : 한 개의 Class가 2개 이상의 상위 Class로부터 상속받는것
상위 Class의 구성요소를 바꾸면 심각한 오류를 초래할 수도 있다.

*다형성
하나의 message에 대해 여러가지 형태의 응답.(이름이 같으면서 기능이 다르다)
-Object(Class)들은 동일 method명을 사용하며 같은 의미의 응답을 한다.
-하나의 func, 연산자가 2개 이상의 서로 다른 Class의 Instance들을 같은 Class에 속한 Instance처럼 수행