1.테이블을 생성해서,데이터를 입력하시오.

-- member2

insert into member2 values('hkd','홍길동','m','2001-01-01');
insert into member2 values('lss','이순신','m','2003-02-01');
insert into member2 values('hj','황진이','f','2002-11-13');
insert into member2 values('wg','왕건','m','2005-12-21');
insert into member2 values('pms','박문수','m','2006-11-09');

-- goods
insert into goods values(1,'mp3',10000);
insert into goods values(2,'camera',50000);
insert into goods values(3,'pc',700000);

-- orders
insert into  orders values(1,'hkd','2001-03-27');
insert into orders values(2,'wg','2005-04-17');
insert into orders values(3,'hkd','2006-02-07');

-- ordersDetail
 번호,주문번호,상품번호,상품수량
insert into ordersDetail values(1,1,1,1);
insert into ordersDetail values(2,1,3,1);
insert into ordersDetail values(3,2,2,2);
insert into ordersDetail values(4,3,2,1);


2. 전체회원수를 구하시오.


3. 성별 회원수를 구하시오.
성별, 회원수


4. 가장 많이(갯수기준) 판매된 상품부터 출력하시오.
상품명 , 판매수량


5. 주문내역을 출력하시오.
회원명, 상품명, 주문갯수


6. 성이 '홍'인 회원을 검색하시오.



7. 년도, 상품별 판매수량을 구하시오.
년도, 상품명, 판매갯수


--1.테이블을 생성해서,데이터를 입력하시오.
create table member2(
    id varchar2(20) primary key,
    name varchar2(20) not null,
    gender varchar2(20) not null,
    birthday varchar2(30) not null
);
insert into member2 values('hkd','홍길동','m','2001-01-01');
insert into member2 values('lss','이순신','m','2003-02-01');
insert into member2 values('hj','황진이','f','2002-11-13');
insert into member2 values('wg','왕건','m','2005-12-21');
insert into member2 values('pms','박문수','m','2006-11-09');


create table goods(
    num_goods number primary key,
    product varchar2(20) not null,
    price varchar2(20) not null
);
insert into goods values(1,'mp3',10000);
insert into goods values(2,'camera',50000);
insert into goods values(3,'pc',700000);


create table orders(
    num_orders number primary key,
    id VARCHAR2(20) not null,
    date_order date not null,
    constraint fk_orders foreign key(id)
    references member2(id) on delete cascade
);
insert into  orders values(1,'hkd','2001-03-27');
insert into orders values(2,'wg','2005-04-17');
insert into orders values(3,'hkd','2006-02-07');


create table ordersDetail(
    num_oD number primary key,
    num_orders number not null,
    num_goods number not null,
    mum_ex number not null,
    constraint fk_ordersDetail foreign key(num_orders)
    references orders(num_orders) on delete cascade,
    constraint fk_ordersDetail2 foreign key(num_goods)
    references goods(num_goods) on delete cascade

);
-- 번호,주문번호,상품번호,상품수량
insert into ordersDetail values(1,1,1,1);
insert into ordersDetail values(2,1,3,1);
insert into ordersDetail values(3,2,2,2);
insert into ordersDetail values(4,3,2,1);



--2. 전체회원수를 구하시오.
select count(*) as num_member from member2;



--3. 성별 회원수를 구하시오. 성별, 회원수
select gender,count(gender) as num_member from member2 group by gender;



--4.가장 많이(갯수기준) 판매된 상품부터 출력하시오. 상품명 , 판매수량
select a.product,sum(b.mum_ex) as total_sale
from goods a, ordersDetail b
where a.num_goods(+) = b.num_goods
group by a.product order by sum(b.mum_ex) desc;

select a.product, sum(b.mum_ex)  as total_sale
from ordersDetail b inner join goods a
on a.num_goods = b.num_goods
group by a.product order by sum(b.mum_ex) desc;



--5. 주문내역을 출력하시오. 회원명, 상품명, 주문갯수
select a.name, b.product, c.mum_ex as num_sale
from member2 a, goods b, ordersDetail c, orders D
where c.num_orders = d.num_orders and d.id = a.id and c.num_goods = b.num_goods;

select a.name, b.product, c.mum_ex as num_sale
from member2 a
inner join orders d on a.id = d.id
inner join ordersdetail c on d.num_orders = c.num_orders
inner join goods b on b.num_goods = c.num_goods;



--6. 성이 '홍'인 회원을 검색하시오.
select * from member2 where name like '홍%';



--7.년도, 상품별 판매수량을 구하시오. 년도, 상품명, 판매갯수
select to_char(a.date_order, 'yyyy') as year , b.product, c.mum_ex
from orders a, goods b, ordersDetail c
where c.num_orders = a.num_orders and b.num_goods = c.num_goods
order by a.date_order;
