*for(	;	;	)
무한루프. 종료할때까지 무한 반복한다.
무한루프 for문 안에서 조건달성시 종료되는식으로 사용한다.
-break; 혹은 return 0;를 사용하여 루프 탈출
-Ctrl+C 키를 눌러도 중단된다


*Flag(깃발)
프로그래밍에서 참, 거짓을 판단하는데 사용되는 변수를 Flag라고 한다.
전쟁에서 깃발이 여러 신호를 보내는데서 유래.
'A'할 경우에 B한다. 라고 했을때 A가 Flag가 된다.


*Divide & Conquer(나눠서 정복하기)
숲을 먼저 파악한 후 나무를 보자
-전체적으로 파악한 후 세부 기능은 나누어서 하나씩 해결


*while 반복문
for문과 같은 반복문

for( int i =0 ; i<10 ; i++)	=>	int i = 0;
{				while(i<10)
}				{
				      i++;
				}
-while문은 for문과 달리 초깃값,조건식,증감식이 모두 떨어져 있으므로
 실수로 누락해서 오류가 생기는 경우가 for문보다 많다.(for문이 더 안전)
ex) 증감식을 누락하여 무한루프에 빠지는 경우. 
but,그렇기 때문에 무한루프 기법은 while문에서 더 많이 사용한다.
for(  ;   ;  )  =  while(1)


*do while 반복문
일단 한번 실행한 후 조건식 비교
do
{
      i++
}while(i<10);
-반복문 중 가장 안 쓰인다.
거짓이라 반복에 들어가지 않더라도 1번은 실행되어야 할 때 쓰인다.
ex)
int a;					int a;

printf("값을 입력하시오. : ");			do
scanf_s("%d", &a);			=>	{
					   printf("값을 입력하시오. : ");
while (a < 10)				   scanf_s("%d",&a);
 {					}while(a < 10);
   printf("값을 입력하시오. : ");
   scanf_s("%d", &a);
}
-똑같은 printf()와 scanf_s가 2세트가 필요하다.(메모리 낭비)
이럴때 do while 문을 이용하면 초깃값 코드 2줄이 없어도 된다.

*continue - 해당 사이클의 남은 실행문을 건너뛰고(skip하고) 반복문을 계속해서 실행
ex)
for(i=0 ; i<100 ; i++)
{
   if(i%2 == 0) continue;

   sum += i;
}
0~99까지 수 중 짝수는 스킵하고 남은 수의 합을 구하라
(홀수의 합을 구하라)


*goto문
지정된 레이블로 건너뛰게 하는 명령문
-의미 없는 경로를 건너뛰는(속도 향상) 장점이 있지만 코드가 복잡해지고
 예상치 못한 오류를 만들 수 있으므로 사용하지 않는 것이 좋다.


*return
1.함수 종료 return;
2.함수의 반환값을 보내는데 사용 return 0;



---------------------------------------------------------------
ANSI-C : 표준 C (ANSI라는 단체 이름, ASCII 코드도 이 곳의 표준)