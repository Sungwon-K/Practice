*s/w 프로그래밍 학습에 도움되는 이야기

1.프로그래밍 공부 = 외국어회화 공부 (언어 공부)

-낯설기 때문에 처음에는 어려운게 당연
-접하다보면 조금씩 친숙해짐.
-문법을 모두 안다고 회화를 꼭 잘하는게 아님.
(코딩을 많이 해보는게 가장 좋다)

2.백문이불여일타 / 백견이불여일타
(이해가 안되더라도 코딩은 계속 이어져야 한다)

3.Code Speack(코드가 이야기한다)

-책의 설명보다는 코드로 이해하는게 더 좋다.
-소스코드를 소설책 읽듯이 읽는 개발자들도 있다.


C -> C++ -> c++
                   ++

++비트연산자(하나 더 추가됬다)

C는 절차식언어
확장자는 .c

C++는 C에 객체 지향 하나 추가.
*C++안에 C가 포함된다
확장자는 .cpp

++
++의 모양이 #
C#은 .net framwork 가 하나 추가


※C의 특징

-이식성이 좋다

C->Unix->Linux
     └ ─>MacOS->IOS

but, Window : C,C++,C# 짬뽕

JAVA->android

★C는 빠르고 JAVA는 느리다
*C를 쓰는 IOS가 JAVA를 쓰는 android가 더 느리고 메모리를 더 많이 먹는다

-하드웨어와 관련된 부분까지 접근할 수 있다

★pointer가 램에 직접 간섭할 수 있다.
*하드웨어에 접근할 수 있고 시스템 프로그래밍이 가능하다
ex)아두이노
속도가 빨라야하고 메모리를 적게 먹어야한다.
렘에 직접 접근하므로 개발자에 따라 램을 더 적게 먹을 수 있게 할 수 있다.

-C를 배우면 다른 언어를 배우기 용이하다.


기계어 : 0과 1로 이루어진 언어
ex) 0101110 - 0(off)와 1(on). 스위치로만 이루어진 언어

어셈블리어 : 명령어의 집합
단어로만 이루어져 있지만 아직 복잡
(위 세대보다 한세대 더 위 세대)

              ↑
---------------------------저급언어(컴퓨터에 가까울수록 저급, 사람에 가까울수록 고급)---
              ↓

Fortran, Cobol
                            } 차이 : C, JAVA에는 함수(Function)이 있다.
C,JAVA 등



※C프로그램 작성 방법


   프로그램 코딩 (확장자 .c)
           ↓    
        소스 파일
-------------------------
         컴파일                 작성된 .c를 기계어로 변환한다
                                  결과 : 오브젝트 파일 생성
            ↓
           링크                  관련 파일을 하나로 결합
                                   결과 : 실행 파일을 생성
-------(한꺼번에 처리)--
            ↓
        파일 실행               생성된 .exe 파일 실행



C소스파일 ->컴파일러(기계어 번역기)->오브젝트파일(기계어로 이루어져 있다)->링커->실행파일(.exe)

링크 : 컴파일 할 때 함수라이브러리(여러 함수의 집합체)가 삽입됨

*상식)Dinamic Link Library(동적 링크 라이브러리)
-일반 링크처럼               컴파일 할때 삽입되는게 아니라
이미 컴파일 된 라이브러리가 실행 할때 삽입되는 것
자주 보던 .dll 파일이 이것!

--------------------VS-------------------

IDE(Integrated Development Envirionment) 통합개발환경
에디터+컴파일러+링커+디버거
ex)Visual Studio


------------------------------------------
★윈도우즈 계정명은 반드시 영어로
한글로 하면 설치나 실행이 되지 않는 프로그램이 있을 수도 있다.


#include<stdio.h>                       -stdio.h(standard input output)헤더파일을 포함
                                                        표준 입출력-기본 함수 포함

int main()                                 -int main 정수형 주요함수(메인 함수가 없으면 실행이 안된다.)
{
	printf("Hello World");      -PrintFormat(형식) 기본 출력 함수
                                                        형식을 갖춰서 출력. 형식ex) %d -정수 형식
                                                                                            %f - 실수 형식
                                                        (" ") 안에 부분을 출력형식. 
                                                        따로 지정하지 않으면 기본 출력장치인 모니터로 출력
}


*C언어 데이터 중심 언어
-사용한 데이터(유형)들을 가장 먼저 지정하라
요즘은 다른 언어들의 영향을 받아 코드 중간에 변수 선언을 해도 가능하지만 기본은 가장 먼저 지정하는 것


#include<stdio.h>

int main()
{
	int a, b;
	int result;

	a=100, b=50;

	result = a+b;
	printf("%d + %d = %d\n",a,b,result);

	result = a-b;
	printf("%d - %d = %d\n",a,b,result);

	result = a*b;
	printf("%d * %d = %d\n",a,b,result);

	result = a/b;
	printf("%d / %d = %d\n",a,b,result);
}

a,b,result : 변수(변할 수 있는 수)  <-> 상수(변하지 않는 수,항상 값이 일정한 경우)
-값을 저장하는 영역(memory에 할당되는 공간)
-선언 되는 유형에 따라 다른 크기의 공간이 할당된다
-변수의 이름이 해당 변수가 할당된 공간을 찾아가는 지표
   ex) int a; - a라는 이름의 정수 유형 변수 선언 : a라는 지표가 박힌 4바이트 공간 할당
-memory(RAM)에 생성됨(휘발성 데이터-프로그램 종료시 모두 증발하는 데이터, 자동변수)

but, 개발자가 직접 코드로 소멸시키기 전까지는 자동으로 소멸되지 않는 변수도 있다.
(Memory Leak 메모리 누수)


bit : 1(on) or 0(off) 단일 스위치
byte   ==      8 bit
kbyte  == 1024 byte
mbyte == 1024 kbyte
gbyte  == 1024 mbyte
tbyte   == 1024 gbyte

※JAVA는 Garbage Collector가 모두 처리해주기 때문에 Memory Leak이 발생하지 않는다.
